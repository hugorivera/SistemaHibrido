package RedNeuronalHopfield;

/**
 *
 * @author Alberto
 */
public class main {

    public static void main(String[] args) {

//        int[][] entrenamiento = {
//            {1, 1, 1, -1, -1, -1},
//            {1, -1, 1, -1, -1, -1},
//            {-1, 1, 1, -1, -1, -1},
//            
//            
//            {1, 1, -1, -1, -1, -1},
//            {-1, -1, 1, -1, -1, 1},
//            {1, -1, -1, -1, -1, 1},
//            {-1, -1, 1, 1, -1, -1}
//        };
//        int[][] entrenamiento = {
//            {1, -1, -1, -1, 1, -1, -1, -1, 1},
//            {-1, -1, 1, -1, -1, 1, -1, -1, 1},
//            {1, -1, 1, -1, 1, -1, 1, -1, 1},
//            {1, 1, -1, -1, 1, -1, 1, -1, -1},
//            {-1, -1, -1, -1, 1, -1, -1, -1, 1},
//            {-1, 1, -1, -1, 1, -1, -1, 1, 1}
//        
//        };
//        int[][] entrenamiento = {
//            {-1, -1, -1, -1, -1, -1},
//            {1, 1, 1, -1, -1, -1},
//            {1, 1, 1, 1, 1, 1}
//        };
//        int[][] entrenamiento = {
//            {1, 1, 1, - 1},
//            {-1, -1, -1, 1}};
//        
//        int[][] entrenamiento = {
//            {1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, 1, 1, 1, 1},
//            {1, 1, 1, 1, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, 1, 1, 1, 1, 1},
//            {1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1}
//        };
//        int[] entrada = {-1, 1, 1, -1, 1, 1};
//        int[] entrada = {-1, 1, 1, -1, 1, 1, 1, 1, - 1};
//        int[] entrada = {-1,-1,-1,-1};
//        int[] entrada = {-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, 1};
//        int[][] entrenamiento = {
//            {1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, 1, 1, 1, 1},
//            {1, 1, 1, 1, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, 1, 1, 1, 1, 1},
//            {1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1},};
//
//        int[] entrada = {-1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, 1};
//        int[] entrada = {1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1};
        int[][] entrenamiento = {
            {1, 1, 1, 1, -1, -1, 1, -1, -1,1,-1,-1,1,1,1,1},
            {-1, -1, -1, -1, 1, 1, 1, 1, 1,1,1,-1,-1,-1,-1,-1}
            
        
        };
        int[] entrada = {-1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, -1};
        
        
        Red R = new Red();
        R.FaseEntrenamiento(entrenamiento);
        R.FaseFuncionamiento(entrada);

    }
}
